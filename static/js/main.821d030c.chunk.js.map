{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","assets/images/burger-logo.png","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/Toolbar/Toolbar.js","components/UI/Backdrop/Backdrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Modal/Modal.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Spinner/Spinner.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","components/UI/Input/Input.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Lettuce","Tomato","Bacon","__webpack_require__","p","logo","props","react_default","a","createElement","className","src","burgerLogo","alt","navigationItem","NavLink","to","link","exact","children","navigationItems","auth","NavigationItem_NavigationItem","isAuthenticated","Fragment","toolbar","onClick","menuClicked","Logo_Logo","NavigationItems_NavigationItems","backdrop","show","clicked","sideDrawer","sideDrawerClasses","open","Backdrop_Backdrop","closed","join","Layout","state","showSideDrawer","sideDrawerClosedHandler","_this","setState","sideDrawerOpenHandler","Toolbar_Toolbar","this","SideDrawer_SideDrawer","Component","connect","token","BurgerIngredient","ingredient","type","styles","burger","ingredients","Object","keys","map","igKey","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","buildControl","label","removed","disabled","added","buildControlls","price","toFixed","BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","Modal","nextProps","nextState","modalClosed","style","transform","opacity","OrderSummary","ingredientSummary","textTransform","cancelClicked","continueClicked","spinner","authSuccess","authData","idToken","userId","localId","checkAuthTimeout","expierationTime","dispatch","setTimeout","BurgerBuilder","purchasing","purchaseHandler","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","pathname","onIngredientsInitialized","_this2","sum","disabledInfo","objectSpread","orderSummary","Spinner_Spinner","Burger_OrderSummary_OrderSummary","totalPrice","Burger_Burger","BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","UI_Modal_Modal","burgerBuilder","ingredientName","fetch","then","response","json","error","catch","fetchIngredientsFailed","checkoutSummary","width","margin","checkoutCancelled","checkoutContinued","input","inputElement","inputClasses","valid","elementType","assign","elementConfig","value","onChange","changed","options","option","displayValue","ContactData","orderForm","name","placeholder","validation","required","touched","email","street","zip","country","deliveryMethod","formIsValid","orderHandler","event","preventDefault","formData","formKey","order","customer","onOrderBurger","inputChangedHandler","inputID","updatedForm","updatedElement","target","checkValidity","inputKey","rules","isValid","trim","minLength","maxLength","formElementsArray","_loop","config","Input_Input","e","form","onSubmit","loading","orderData","queryParams","method","headers","Content-Type","body","JSON","stringify","id","orderID","purchaseBurgerSuccess","purchaseBurgerFail","actions","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","summary","Redirect","purchased","CheckoutSummary_CheckoutSummary","Route","path","match","component","entries","filter","n","Number","parseFloat","Orders","console","log","onFetchOrders","orders","Order_Order","fetchOrdersSuccess","fetchOrdersFail","Auth","isSignup","controls","isEmail","password","controlName","updatedControls","defineProperty","submitHandler","onAuth","switchAuthModeHandler","prevState","errorMessage","message","authRedirect","isBuilding","building","signup","arguments","undefined","returnSecureToken","user","expirationDate","Date","getTime","expiresIn","localStorage","setItem","authFail","Logout","onLogout","App","onTryAutoLogin","routes","Switch","components_Layout_Layout","withRouter","parse","getItem","Boolean","window","location","hostname","initialState","INGREDIENT_PRICES","cheese","lettuce","bacon","tomato","meat","reducer","action","removeItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","burgerBuilderReducer","orderReducer","authReducer","store","createStore","applyMiddleware","thunk","app","es","BrowserRouter","basename","src_App_0","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.821d030c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__3_bpn\",\"BreadTop\":\"BurgerIngredient_BreadTop__9-wr5\",\"Seeds1\":\"BurgerIngredient_Seeds1__3XBAL\",\"Seeds2\":\"BurgerIngredient_Seeds2__onVhM\",\"Meat\":\"BurgerIngredient_Meat__2MbxR\",\"Cheese\":\"BurgerIngredient_Cheese__2Dctr\",\"Lettuce\":\"BurgerIngredient_Lettuce__O2sOq\",\"Tomato\":\"BurgerIngredient_Tomato__2zAOS\",\"Bacon\":\"BurgerIngredient_Bacon__1YoAV\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","import React from 'react';\nimport burgerLogo from '../../assets/images/burger-logo.png'\nimport './Logo.scss'\n\nconst logo = (props) => (\n  <div className='logo'>\n    <img src={burgerLogo} alt=\"MyBurger\"/>\n  </div>\n)\n\nexport default logo;\n","import React from 'react'\nimport { NavLink } from 'react-router-dom';\nimport './NavigationItem.scss'\n\nconst navigationItem =(props) => (\n    <li className='NavigationItem'>\n      <NavLink to={props.link} exact={props.exact}>{props.children}</NavLink>\n    </li>\n)\n\nexport default navigationItem;\n","import React from 'react'\nimport NavigationItem from './NavigationItem/NavigationItem'\nimport './NavigationItems.scss'\n\nconst navigationItems = (props) => {\n  let auth = <NavigationItem link=\"/auth\">Authenticate</NavigationItem>\n  if (props.isAuthenticated) {\n    auth = (\n      <>\n        <NavigationItem link=\"/orders\">Orders</NavigationItem>\n        <NavigationItem link=\"/logout\">Logout</NavigationItem>\n      </>\n    )\n  }\n  return (\n    <ul className='NavigationItems'>\n      <NavigationItem link=\"/\" exact>Burger Builder</NavigationItem>\n      {auth}\n    </ul>\n  )\n}\n\nexport default navigationItems;\n","import React from 'react';\nimport './Toolbar.scss'\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../../Navigation/NavigationItems/NavigationItems';\n\nconst toolbar = (props) => (\n  <header className='Toolbar'>\n    <button className='MenuButton' onClick={props.menuClicked}>Menu</button>\n    <Logo/>\n    <nav className='DesktopOnly'>\n      <NavigationItems isAuthenticated={props.isAuthenticated}/>\n    </nav>\n  </header>\n);\n\nexport default toolbar\n","import React from 'react';\nimport './Backdrop.scss'\n\nconst backdrop = (props) => (\n  props.show ? <div\n    className='Backdrop'\n    onClick={props.clicked}></div> : null\n)\n\nexport default backdrop\n","import React from 'react'\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './SideDrawer.scss'\nimport Backdrop from '../../UI/Backdrop/Backdrop';\n\nconst sideDrawer = (props) => {\n  let sideDrawerClasses = ['SideDrawer','Close']\n  if (props.open) {\n    sideDrawerClasses = ['SideDrawer','Open']\n  }\n  return (\n    <>\n      <Backdrop\n      show={props.open}\n      clicked={props.closed}/>\n      <div className={sideDrawerClasses.join(' ')}>\n        <Logo />\n        <nav>\n          <NavigationItems isAuthenticated={props.isAuthenticated}/>\n        </nav>\n      </div>\n    </>\n  );\n};\n\nexport default sideDrawer;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport './Layout.scss';\nimport Toolbar from '../Navigation/Toolbar/Toolbar'\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer'\n\nclass Layout extends Component {\n  state = {\n    showSideDrawer: false\n  }\n\n  sideDrawerClosedHandler = () => {\n    this.setState({showSideDrawer: false})\n  }\n\n  sideDrawerOpenHandler = () => {\n    this.setState({showSideDrawer: true})\n  }\n\n  render() {\n    return (\n      <>\n        <Toolbar menuClicked={this.sideDrawerOpenHandler} isAuthenticated={this.props.isAuthenticated}/>\n        <SideDrawer\n          open={this.state.showSideDrawer}\n          closed={this.sideDrawerClosedHandler}\n          isAuthenticated={this.props.isAuthenticated}/>\n        <main>\n          {this.props.children}\n        </main>\n      </>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n}\n\n\nexport default connect(mapStateToProps)(Layout);\n","import React, { Component } from 'react';\nimport styles from './BurgerIngredient.module.css'\nimport PropTypes from 'prop-types'\n\nclass BurgerIngredient extends Component {\n  render () {\n    let ingredient = null;\n    switch (this.props.type) {\n      case ('bread-bottom'):\n        ingredient = <div className={styles.BreadBottom}></div>;\n        break;\n      case ('bread-top'):\n        ingredient = (\n          <div className={styles.BreadTop}>\n            <div className={styles.Seeds1}></div>\n            <div className={styles.Seeds2}></div>\n          </div>\n        );\n        break;\n      case ('meat'):\n        ingredient = <div className={styles.Meat}></div>;\n        break;\n      case ('cheese'):\n        ingredient = <div className={styles.Cheese}></div>;\n        break;\n      case ('lettuce'):\n        ingredient = <div className={styles.Lettuce}></div>;\n        break;\n      case ('bacon'):\n        ingredient = <div className={styles.Bacon}></div>;\n        break;\n      case ('tomato'):\n        ingredient = <div className={styles.Tomato}></div>;\n        break;\n      default:\n        ingredient = <div>{this.props.type}</div>;\n    }\n\n\n    return ingredient;\n  }\n}\n\nBurgerIngredient.propTypes = {\n  type: PropTypes.string.isRequired\n}\n\nexport default BurgerIngredient;\n","import React from 'react'\nimport './Burger.scss'\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient'\n\nconst burger = (props) => {\n  let ingredients = Object.keys(props.ingredients)\n    .map((igKey) => {\n      return [...Array(props.ingredients[igKey])].map((_,i) => {\n        return <BurgerIngredient key={igKey + i} type={igKey}/>\n      });\n    })\n    .reduce((arr,el) => {\n      return arr.concat(el)\n    }, []);\n    if (ingredients.length ===0 ) {\n      ingredients = <p> Please Start Adding Ingredients </p>\n    }\n  return (\n    <div className=\"burger\">\n      <BurgerIngredient type='bread-top'/>\n      {ingredients}\n      <BurgerIngredient type='bread-bottom'/>\n    </div>\n  );\n};\n\nexport default burger;\n","import React from 'react';\nimport './BuildControl.scss'\n\nconst buildControl = (props) => (\n  <div className = 'BuildControl'>\n    <div className='Label'>{props.label}</div>\n    <button\n      className='Remove'\n      onClick={props.removed}\n      disabled={props.disabled} > Remove </button>\n    <button\n      className='Add'\n      onClick={props.added}     > Add    </button>\n  </div>\n\n);\n\nexport default buildControl;\n","import React from 'react';\nimport './BuildControls.scss'\nimport BuildControl from './BuildControl/BuildControl'\n\nconst ingredients = [\n  {label: 'Cheese', type: 'cheese' },\n  {label: 'Lettuce', type: 'lettuce' },\n  {label: 'Bacon', type: 'bacon' },\n  {label: 'Tomato', type: 'tomato' },\n  {label: 'Meat', type: 'meat' }\n]\n\nconst buildControlls = (props) => (\n\n  <div className='BuildControls'>\n    <p>Current Price : <strong>{props.price.toFixed(2)}</strong></p>\n    {ingredients.map((ingredient) => (\n      <BuildControl\n        key={ingredient.label}\n        label={ingredient.label}\n        added={() => props.ingredientAdded(ingredient.type)}\n        removed={() => props.ingredientRemoved(ingredient.type)}\n        disabled={props.disabled[ingredient.type]}/>\n    ))}\n    <button\n      className='OrderButton'\n      disabled={!props.purchasable}\n      onClick={props.ordered}>\n        {props.isAuthenticated ? 'ORDER NOW' : 'SIGN UP TO ORDER'}\n    </button>\n  </div>\n);\n\nexport default buildControlls\n","import React, {Component} from 'react';\nimport './Modal.scss';\nimport Backdrop from '../Backdrop/Backdrop';\n\nclass Modal extends Component {\n  shouldComponentUpdate(nextProps, nextState) {\n    return nextProps.show !== this.props.show ||\n      nextProps.children !== this.props.children;\n  }\n\n\n  render(){\n    return(\n      <>\n        <Backdrop\n          show={this.props.show}\n          clicked={this.props.modalClosed}/>\n        <div\n          className='Modal'\n          style={{\n            transform: this.props.show ? 'translateY(0)': 'translateY(-100vh)',\n            opacity :this.props.show ? '1':'0'\n          }}>\n          {this.props.children}\n        </div>\n      </>\n    )\n  }\n}\n\n\nexport default Modal;\n","import React, { Component } from 'react';\n\nclass OrderSummary extends Component {\n  render() {\n    const ingredientSummary = Object.keys(this.props.ingredients).map(igKey => {\n      return <li key={igKey}>\n        <span style={{ textTransform: 'capitalize'}}>{igKey}</span> : {this.props.ingredients[igKey]}\n        </li>\n    })\n    return (\n      <>\n        <h3>Your Order</h3>\n        <p>A delictios burger with the following ingredients:</p>\n        <ul>\n          {ingredientSummary}\n        </ul>\n        <p><strong>Total Price: {this.props.price.toFixed(2)}</strong></p>\n        <p>Continue to Checkout?</p>\n        <button className='Button Danger'   onClick={this.props.cancelClicked}   > CANCEL   </button>\n        <button className='Button Success'  onClick={this.props.continueClicked} > CONTINUE </button>\n      </>\n    )\n  }\n}\n//\n// const orderSummary = (props) => {\n//\n//\n// };\n\nexport default OrderSummary;\n","import React from 'react';\nimport './Spinner.scss'\n\nconst spinner = () => (\n  <div className=\"loader\">Loading...</div>\n);\n\nexport default spinner;\n","import * as actionTypes from './actionTypes';\n\nconst authStart = () => ({type: actionTypes.AUTH_START})\nconst authSuccess = (authData) => {\n  return {\n    type: actionTypes.AUTH_SUCCESS,\n    token: authData.idToken,\n    userId: authData.localId,\n  }\n}\n\nconst authFail = (error) => {\n  return {\n    type: actionTypes.AUTH_FAIL,\n    error: error\n  }\n}\n\nexport const logout = () => ({type: actionTypes.AUTH_LOGOUT,})\n\nconst checkAuthTimeout = (expierationTime) => {\n  return dispatch => {\n    setTimeout(() => {\n      dispatch(logout())\n    }, expierationTime*1000)\n  };\n}\n\nexport const auth = (email, password, signup = true) => {\n  return dispatch => {\n    dispatch(authStart());\n    let url = ( signup ?\n      'https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyAUVb0O7j_l7QJu1buHd5WmClJRfI98H4Q'  :\n      'https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyAUVb0O7j_l7QJu1buHd5WmClJRfI98H4Q' )\n\n    fetch( url ,{\n      // mode: 'no-cors',\n      method: \"POST\",\n      headers: {\n            \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password,\n        returnSecureToken: true}),\n    })\n    .then( response => response.json())\n    .then( response => {\n      if (response.error) throw response.error;\n      console.log(response)\n      let user = {\n        token: response.idToken,\n        userId: response.localId,\n        expirationDate: new Date(new Date().getTime() + response.expiresIn * 1000),\n      }\n      localStorage.setItem('user', JSON.stringify(user));\n      dispatch(authSuccess(response))\n      dispatch(checkAuthTimeout(response.expiresIn))\n    })\n    .catch(error => {\n      console.error(error);\n      dispatch(authFail(error))\n    })\n    //https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=[API_KEY]\n  };\n}\n\nexport const authCheckState = () => {\n  return dispatch => {\n    const user = JSON.parse(localStorage.getItem('user'));\n    if (!user) {\n      dispatch(logout())\n    } else {\n      const token = user.token\n      const expirationDate = new Date(user.expirationDate);\n      if (expirationDate < new Date()) {\n        dispatch(logout());\n      } else {\n        dispatch(authSuccess({idToken: token,localId: user.userId}))\n        dispatch(checkAuthTimeout((expirationDate.getTime() - new Date().getTime()) / 1000))\n      }\n    }\n  }\n}\n","export const ADD_INGREDIENT = 'ADD_INGREDIENT';\nexport const REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\nexport const SET_INGREDIENTS = 'SET_INGREDIENTS';\nexport const FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\n\n\nexport const PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\nexport const PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\nexport const PURCHASE_BURGER_START = 'PURCHASE_BURGER_START'\nexport const PURCHASE_INIT = 'PURCHASE_INIT'\n\nexport const FETCH_ORDERS_START = 'FETCH_ORDERS_START'\nexport const FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS'\nexport const FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL'\n\nexport const AUTH_START = 'AUTH_START';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const AUTH_FAIL = 'AUTH_FAIL';\n\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT'\n","import React , {Component} from 'react'\nimport { connect } from 'react-redux'\n\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal'\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport * as actions from '../../store/actions/' // can leave out index.js\n\nclass BurgerBuilder extends Component {\n  state = {\n    purchasing: false,\n  }\n\n  componentDidMount () {\n    this.props.onIngredientsInitialized()\n    // fetch('https://react-my-burger-7c16f.firebaseio.com/ingredients.json')\n    // .then( response => response.json())\n    // .then( response => {\n    //   this.setState({ingredients: response})\n    // })\n    // .catch(error => {\n    //   console.log(\"error\",error)\n    // })\n  }\n\n  // addIngredientHandler = (type) => {\n  //   const oldCount = this.state.ingredients[type] ;\n  //   const updatedIngredients = {\n  //     ...this.state.ingredients\n  //   };\n  //   updatedIngredients[type] = oldCount + 1;\n  //   const oldPrice = this.state.totalPrice\n  //   this.setState({ingredients: updatedIngredients,totalPrice: oldPrice + INGREDIENT_PRICES[type]})\n  //   this.updatePurchaseState(updatedIngredients)\n  // }\n  //\n  // removeIngredientHandler = (type) => {\n  //   const oldCount = this.state.ingredients[type] ;\n  //   if (oldCount > 0){\n  //     const updatedIngredients = {\n  //       ...this.state.ingredients\n  //     };\n  //     updatedIngredients[type] = oldCount - 1;\n  //     const oldPrice = this.state.totalPrice\n  //     this.setState({ingredients: updatedIngredients,totalPrice: oldPrice - INGREDIENT_PRICES[type]})\n  //     this.updatePurchaseState(updatedIngredients)\n  //   }\n  // }\n\n  updatePurchaseState () {\n    const sum = Object.keys(this.props.ingredients)\n      .map(igKey => {\n        return this.props.ingredients[igKey]\n      }).reduce((sum, el) => sum + el,0)\n      return sum > 0\n  }\n\n  purchaseHandler = () => {\n    if (this.props.isAuthenticated){\n      this.setState({purchasing: true});\n    } else {\n      this.props.history.push('/auth')\n    }\n\n  }\n\n  purchaseCancelHandler = () => {\n    this.setState({purchasing: false});\n  }\n  \n  purchaseContinueHandler = () => {\n    // alert('You continue!');\n    // const queryParams = [];\n    // for (let i in this.props.ingredients) {\n    //   queryParams.push(encodeURIComponent(i) + '=' + encodeURIComponent(this.props.ingredients[i]))\n    // }\n    // queryParams.push('price=' + this.props.totalPrice);\n    // const queryString = queryParams.join('&');\n    this.props.onInitPurchase()\n    this.props.history.push({\n      pathname: '/checkout',\n    })\n  }\n\n\n  render () {\n    const disabledInfo = {\n      ...this.props.ingredients\n    }\n    for (let key in disabledInfo){\n      disabledInfo[key] = disabledInfo[key] <= 0\n    }\n    let orderSummary = null\n    let burger = <Spinner/>\n    if (this.props.ingredients) {\n      orderSummary = <OrderSummary\n        ingredients = {this.props.ingredients}\n        price = {this.props.totalPrice}\n        cancelClicked = {this.purchaseCancelHandler}\n        continueClicked = {this.purchaseContinueHandler} /> ;\n      burger = (\n        <>\n          <Burger ingredients = {this.props.ingredients}/>\n          <BuildControls\n            ingredientAdded   = {this.props.onIngredientAdded}//{this.addIngredientHandler}\n            ingredientRemoved = {this.props.onIngredientRemoved}//{this.removeIngredientHandler}\n            disabled          = {disabledInfo}\n            purchasable       = {this.updatePurchaseState()}\n            ordered           = {this.purchaseHandler}\n            isAuthenticated   = {this.props.isAuthenticated}\n            price={this.props.totalPrice}/>\n        </>\n      )\n    }\n    return (\n      <>\n        <Modal\n          show={this.state.purchasing}\n          modalClosed={this.purchaseCancelHandler}>\n            {orderSummary}\n        </Modal>\n        { burger }\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    totalPrice: state.burgerBuilder.totalPrice,\n    isAuthenticated: state.auth.token !== null,\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onIngredientAdded:   (ingredient) => dispatch(actions.addIngredient(ingredient)),\n    onIngredientRemoved: (ingredient) => dispatch(actions.removeIngredient(ingredient)),\n    onIngredientsInitialized: () => dispatch(actions.initIngredients()),\n    onInitPurchase: () => dispatch(actions.purchaseInit()),\n  }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps)(BurgerBuilder);\n","import * as actionTypes from './actionTypes';\n\nexport const addIngredient    = (ingredientName) => ({type: actionTypes.ADD_INGREDIENT   , ingredientName: ingredientName});\nexport const removeIngredient = (ingredientName) => ({type: actionTypes.REMOVE_INGREDIENT, ingredientName: ingredientName});\n\nconst setIngredients = (ingredients) => ({type:actionTypes.SET_INGREDIENTS, ingredients:ingredients})\nconst fetchIngredientsFailed = (error) => ({type:actionTypes.FETCH_INGREDIENTS_FAILED, error:error})\n\nexport const initIngredients = () => {\n  return dispatch => {\n    fetch('https://react-my-burger-7c16f.firebaseio.com/ingredients.json')\n    .then( response => response.json())\n    .then( response => {\n      if (response.error) throw response.error;\n      dispatch(setIngredients(response))\n    })\n    .catch(error => {\n      dispatch(fetchIngredientsFailed(error))\n    })\n  };\n}\n","import * as actionTypes from './actionTypes'\n\nconst purchaseBurgerSuccess = (id,orderData) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_SUCCESS,\n    orderID: id,\n    orderData: orderData,\n  }\n};\nconst purchaseBurgerFail = (error) => {\n  return {\n    type: actionTypes.PURCHASE_BURGER_FAIL,\n    error: error,\n  }\n};\n\nconst purchaseBurgerStart = () => ({type: actionTypes.PURCHASE_BURGER_START})\n\nexport const purchaseBurger = ( orderData, token ) => {\n  return dispatch => {\n    dispatch(purchaseBurgerStart())\n    const queryParams = `?auth=${token}`\n    fetch(`https://react-my-burger-7c16f.firebaseio.com/order.json${queryParams}`,{\n      method: \"POST\",\n      headers: {\n            \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(orderData),\n    })\n    .then( response => response.json())\n    .then( response => {\n      if (response.error) throw response.error\n      dispatch(purchaseBurgerSuccess(response.name,orderData))\n    })\n    .catch(error => {\n      dispatch(purchaseBurgerFail(error))\n    })\n  }\n}\n\nconst fetchOrdersSuccess = (orders) => ({\n    type: actionTypes.FETCH_ORDERS_SUCCESS,\n    orders: orders,\n});\n\nconst fetchOrdersFail = (error) => ({\n    type: actionTypes.FETCH_ORDERS_FAIL,\n    error: error,\n});\n\nconst featchOrdersStart = () => ({type: actionTypes.FETCH_ORDERS_START})\n\nexport const fetchOrders = (token , userId) => {\n  return dispatch => {\n    dispatch(featchOrdersStart())\n    const queryParams = `?auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`\n    fetch(`https://react-my-burger-7c16f.firebaseio.com/order.json${queryParams}`)\n    .then( response => response.json())\n    .then( response => {\n      if (response.error) throw response.error;\n      let orders = Object.entries(response)\n        .map((order) => (\n          {\n            ...order[1],\n            id: order[0],\n          }\n        ))\n      dispatch(fetchOrdersSuccess(orders))\n    })\n    .catch(error => {\n      dispatch(fetchOrdersFail(error))\n    })\n  }\n}\n\n\n\nexport const purchaseInit = () => ({type: actionTypes.PURCHASE_INIT})\n","import React from 'react';\n\nimport Burger from '../../Burger/Burger';\nimport './CheckoutSummary.scss'\n\nconst checkoutSummary = (props) => {\n  return (\n    <div className='CheckoutSummary'>\n      <h1>We hope it tast well!</h1>\n      <div style={{width: '100%', margin: 'auto'}}>\n        <Burger ingredients={props.ingredients}/>\n      </div>\n      <button className='Button Danger'   onClick={props.checkoutCancelled} > CANCEL   </button>\n      <button className='Button Success'  onClick={props.checkoutContinued} > CONTINUE </button>\n    </div>\n  )\n}\n\nexport default checkoutSummary;\n","import React from 'react';\nimport './Input.scss'\n\nconst input = (props) => {\n  let inputElement = null;\n  const inputClasses = ['InputElement']\n\n  if (!props.valid) {\n    inputClasses.push('Invalid')\n  }\n\n  switch (props.elementType) {\n    case ('input'):\n      inputElement = <input className = {inputClasses.join(' ')}\n        {...props.elementConfig}\n        value = {props.value}\n        onChange={props.changed}/>;\n      break;\n    case ('textarea'):\n      inputElement = <textarea className = {inputClasses.join(' ')}\n        {...props.elementConfig}\n        value = {props.value}\n        onChange={props.changed}/>;\n      break;\n    case ('select'):\n      inputElement = (<select className = {inputClasses.join(' ')}\n        value = {props.value}\n        onChange={props.changed}>\n          {props.elementConfig.options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.displayValue}\n            </option>\n          ))}\n        </select>);\n      break;\n    default:\n      inputElement = <input className = {inputClasses.join(' ')}\n        {...props.elementConfig}\n        value = {props.value}\n        onChange={props.changed}/>;\n\n  }\n  return (\n    <div className = 'Input'>\n      <label>{props.label}</label>\n      {inputElement}\n    </div>\n  );\n}\n\nexport default input;\n","import React, {Component} from 'react';\nimport { connect } from 'react-redux'\n\nimport './ContactData.scss'\nimport Spinner from '../../../components/UI/Spinner/Spinner'\nimport Input from '../../../components/UI/Input/Input'\nimport * as actions from '../../../store/actions/index';\n\nclass ContactData extends Component {\n  state = {\n    orderForm: {\n      name: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Your Name',\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n      },\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'Your@Email.com',\n        },\n        value: '',\n        validation: {\n          required: false\n        },\n        valid: true,\n        touched: false,\n      },\n      street: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Adress Street',\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n      },\n      zip: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'number',\n          placeholder: 'Zip Code',\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n      },\n      country: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'text',\n          placeholder: 'Country',\n        },\n        value: '',\n        validation: {\n          required: true\n        },\n        valid: false,\n        touched: false,\n      },\n      deliveryMethod: {\n        elementType: 'select',\n        elementConfig: {\n          options: [\n            { value: 'fastest' , displayValue: 'Fastest' },\n            { value: 'cheapest', displayValue: 'Cheapest'}\n          ]\n        },\n        value: 'fastest',\n        validation: {\n        },\n        valid: true,\n        touched: false,\n      },\n    },\n    formIsValid: false,\n  }\n\n  orderHandler =(event) => {\n    event.preventDefault()\n    // this.setState( {loading: true })\n    const formData = {};\n    for (let formKey in this.state.orderForm) {\n      formData[formKey] = this.state.orderForm[formKey].value\n    }\n    const order = {\n      ingredients: this.props.ingredients,\n      price: this.props.price,\n      customer: formData,\n      userId: this.props.userId,\n    }\n    this.props.onOrderBurger(order,this.props.token)\n    // fetch('https://react-my-burger-7c16f.firebaseio.com/order.json',{\n    //   method: \"POST\",\n    //   // mode: 'cors',\n    //   // credentials: \"same-origin\",\n    //   headers: {\n    //         \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(order),\n    // })\n    // .then( response => response.json())\n    // .then( response => {\n    //   this.setState({loading: false})\n    //   this.props.history.push('/');\n    // })\n    // .catch(error => {\n    //   this.setState({loading: false})\n    //   console.log(\"error\",error)\n    // })\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (rules.required) {\n      isValid = isValid && value.trim() !== '';\n    }\n    if (rules.minLength) {\n      isValid =  isValid && value.length >= rules.minLength\n    }\n    if (rules.maxLength) {\n      isValid =  isValid && value.length <= rules.maxLength\n    }\n\n    return isValid;\n  }\n\n  inputChangedHandler = (event, inputID) => {\n    const updatedForm = {\n      ...this.state.orderForm\n    };\n    const updatedElement = {\n      ...updatedForm[inputID]\n    };\n    updatedElement.value = event.target.value;\n    updatedElement.valid = this.checkValidity(updatedElement.value , updatedElement.validation)\n    updatedElement.touched = true;\n    updatedForm[inputID] = updatedElement\n\n    let formIsValid = true;\n    for(let inputKey in updatedForm) {\n      formIsValid = formIsValid && updatedForm[inputKey].valid\n    }\n    this.setState({orderForm: updatedForm, formIsValid: formIsValid})\n  }\n\n  render () {\n    const formElementsArray = [];\n    for (let key in this.state.orderForm) {\n      let config = this.state.orderForm[key]\n      formElementsArray.push(\n        <Input\n          key={key}\n          elementType={config.elementType}\n          elementConfig={config.elementConfig}\n          value={config.value}\n          valid={config.valid || !config.touched}\n          changed={(e) => this.inputChangedHandler(e,key)}/>\n      );\n    }\n    let form = (\n      <form onSubmit={this.orderHandler}>\n        {formElementsArray}\n        <button className='Button Success' disabled={!this.state.formIsValid}> ORDER </button>\n      </form>\n    )\n    if ( this.props.loading ) {\n      form = <Spinner />;\n    }\n    return (\n      <div className='ContactData'>\n        <h4> Enter your Contact Data</h4>\n          {form}\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    price: state.burgerBuilder.totalPrice,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onOrderBurger: (orderData,token) => dispatch(actions.purchaseBurger(orderData,token))\n  }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(ContactData)\n","import React, { Component } from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\nimport ContactData from './ContactData/ContactData'\nimport { connect } from 'react-redux'\n\nclass Checkout extends Component {\n\n\n  checkoutCancelledHandler = () => {\n    this.props.history.goBack();\n  }\n\n  checkoutContinuedHandler = () => {\n    this.props.history.replace('/checkout/contact-data');\n  }\n\n  // componentWillMount() {\n  //   const query = new URLSearchParams(this.props.location.search);\n  //   const ingredients = {};\n  //   let price = 0;\n  //   for (let param of query.entries()) {\n  //     if (param[0] === 'price'){\n  //       price = param[1]\n  //     } else {\n  //       ingredients[param[0]] = +param[1];\n  //     }\n  //   }\n  //   this.setState({ingredients: ingredients, totalPrice: price})\n  // }\n\n  render(){\n    let summary = <Redirect to=\"/\"/>\n    if (this.props.ingredients && !this.props.purchased){\n      summary = (\n        <div>\n          <CheckoutSummary\n          ingredients={this.props.ingredients}\n          checkoutCancelled={this.checkoutCancelledHandler}\n          checkoutContinued={this.checkoutContinuedHandler}/>\n          <Route\n            path={this.props.match.path + \"/contact-data\"}\n            component={ContactData}\n            />\n        </div>\n      )\n    }\n    return summary\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    ingredients: state.burgerBuilder.ingredients,\n    purchased: state.order.purchased,\n  };\n}\n\n\nexport default connect(mapStateToProps)(Checkout);\n","import React from 'react';\nimport './Order.scss'\n\nconst order = (props) => {\n  const ingredients = Object.entries(props.ingredients).map((ingredient) => {\n    return (ingredient[1] ? `${ingredient[0]} (${ingredient[1]}) ` : null)\n  }).filter( n => n)\n  return (\n    <div className='Order'>\n      <p> Ingredients: {ingredients.join(', ')} </p>\n      <p> Price: <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong></p>\n    </div>\n  );\n}\n\nexport default order;\n","import React, { Component } from 'react';\n//import './Orders.scss'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../store/actions/' // can leave out index.js\nimport Order from '../../components/Order/Order'\nimport Spinner from '../../components/UI/Spinner/Spinner'\n\nclass Orders extends Component {\n  state = {\n  }\n  componentDidMount () {\n    console.log(this.props.userId);\n    this.props.onFetchOrders(this.props.token,this.props.userId)\n    // fetch('https://react-my-burger-7c16f.firebaseio.com/order.json')\n    // .then( response => response.json())\n    // .then( response => {\n    //   this.setState({orders: response , loading: false})\n    // })\n    // .catch(error => {\n    //   console.log(\"error\",error)\n    // })\n  }\n  render () {\n    let orders = null\n    if (this.props.orders) {\n      orders = this.props.orders.map((order) => (\n        <Order\n          ingredients={{...order.ingredients}}\n          price={order.price}\n          key = {order.id}/>\n      ))\n    }\n    if (this.props.loading) {\n      orders = <Spinner/>\n    }\n    return (\n      <>\n        {orders}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    orders: state.order.orders,\n    loading: state.order.loading,\n    token: state.auth.token,\n    userId: state.auth.userId,\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onFetchOrders: (token , userId) => dispatch(actions.fetchOrders(token, userId)),\n  }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps)(Orders);\n\n\n// orders = Object.entries(this.state.orders)\n//   .map((order) => (\n//     <Order key={order[0]} {...order[1]}/>\n//   ))\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport Input from '../../components/UI/Input/Input'\nimport './Auth.scss'\nimport Spinner from '../../components/UI/Spinner/Spinner'\nimport * as actions from '../../store/actions/'\n\n\nclass Auth extends Component {\n  state = {\n    isSignup: true,\n    controls: {\n      email: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'email',\n          placeholder: 'E-Mail Address',\n        },\n        value: 'test@test.com',\n        validation: {\n          required: true,\n          isEmail: true,\n        },\n        valid: false,\n        touched: false,\n      },\n      password: {\n        elementType: 'input',\n        elementConfig: {\n          type: 'password',\n          placeholder: 'Password',\n        },\n        value: '123456',\n        validation: {\n          required: true,\n          minLength: 6,\n        },\n        valid: false,\n        touched: false,\n      },\n    }\n  }\n\n  inputChangedHandler = (event, controlName) => {\n    const updatedControls = {\n      ...this.state.controls,\n      [controlName]: {\n        ...this.state.controls[controlName],\n        value: event.target.value,\n        valid: this.checkValidity(event.target.value, this.state.controls[controlName].validation),\n        touched: true,\n      }\n    }\n    this.setState({controls: updatedControls})\n  }\n\n  checkValidity(value, rules) {\n    let isValid = true;\n    if (rules.required) {\n      isValid = isValid && value.trim() !== '';\n    }\n    if (rules.minLength) {\n      isValid =  isValid && value.length >= rules.minLength\n    }\n    if (rules.maxLength) {\n      isValid =  isValid && value.length <= rules.maxLength\n    }\n\n    return isValid;\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault();\n    this.props.onAuth(this.state.controls.email.value, this.state.controls.password.value, this.state.isSignup)\n  }\n\n  switchAuthModeHandler = () => {\n    this.setState(prevState => ({isSignup: !prevState.isSignup}))\n  }\n\n  render () {\n    let formElementsArray = [];\n    for (let key in this.state.controls) {\n      let config = this.state.controls[key]\n      formElementsArray.push(\n        <Input\n          key={key}\n          elementType={config.elementType}\n          elementConfig={config.elementConfig}\n          value={config.value}\n          valid={config.valid || !config.touched}\n          changed={(e) => this.inputChangedHandler(e,key)}/>\n      );\n    }\n\n    if (this.props.loading) {\n      formElementsArray = <Spinner />\n    }\n\n    let errorMessage = null;\n    if (this.props.error) {\n      errorMessage = (\n        <p className='error'>{this.props.error.message}</p>\n      )\n    }\n\n    let authRedirect = null;\n    if (this.props.isAuthenticated) {\n        authRedirect = <Redirect to={this.props.isBuilding ? '/checkout' : '/'} />\n    }\n\n    return (\n      <div className=\"Auth\">\n        {authRedirect}\n        <form onSubmit={this.submitHandler}>\n          {formElementsArray}\n          {errorMessage}\n          <button className=\"Button Success\"> {this.state.isSignup ? 'Create Account' : 'Sign-in' } </button>\n        </form>\n          <button\n            className=\"Button Danger Small\"\n            onClick={this.switchAuthModeHandler}>\n            {this.state.isSignup ? 'Sign-in' : 'Create Account'}\n          </button>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    loading: state.auth.loading,\n    error: state.auth.error,\n    isAuthenticated: state.auth.token !== null,\n    isBuilding: state.burgerBuilder.building,\n  };\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuth: (email, password, signup) => dispatch(actions.auth(email, password, signup))\n  }\n}\n\nexport default connect(mapStateToProps , mapDispatchToProps)(Auth);\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\n\nimport * as actions from '../../../store/actions/' // can leave out index.js\n//import './Logout.scss'\n\nclass Logout extends Component {\n  componentDidMount () {\n    this.props.onLogout()\n  }\n  render () {\n\n    return (\n      <Redirect to=\"/\" />\n    );\n  }\n}\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onLogout: () => dispatch(actions.logout()),\n  }\n}\n\nexport default connect(null , mapDispatchToProps)(Logout);\n","import React, { Component } from 'react';\nimport { Route, Switch, withRouter , Redirect} from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport Layout from './components/Layout/Layout'\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder'\nimport Checkout from './containers/Checkout/Checkout'\nimport Orders from './containers/Orders/Orders'\nimport Auth from './containers/Auth/Auth'\nimport Logout from './containers/Auth/Logout/Logout'\nimport * as actions from './store/actions/'\nimport './App.scss'\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onTryAutoLogin()\n  }\n  render() {\n    let routes = (\n      <Switch>\n        <Route path=\"/auth\" exact component={Auth} />\n        <Route path=\"/\" exact component={BurgerBuilder} />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.props.isAuthenticated) {\n      routes = (\n        <Switch>\n          <Route path=\"/checkout\" component={Checkout} />\n          <Route path=\"/orders\" exact component={Orders} />\n          <Route path=\"/auth\" exact component={Auth} />\n          <Route path=\"/logout\" exact component={Logout} />\n          <Route path=\"/\" exact component={BurgerBuilder} />\n        </Switch>\n      );\n    }\n\n    return (\n      <Layout>\n        {routes}\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    isAuthenticated: state.auth.token !== null,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onTryAutoLogin: () => dispatch(actions.authCheckState())\n  }\n}\n\nexport default withRouter(connect(mapStateToProps , mapDispatchToProps)(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  ingredients: null,\n  totalPrice: 4,\n  error: false,\n  building: false,\n}\n\nconst INGREDIENT_PRICES = {\n  cheese: 0.5,\n  lettuce: 0.0,\n  bacon: 0.75,\n  tomato: 0.0,\n  meat: 1.3,\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.ADD_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] + 1\n        },\n        totalPrice: state.totalPrice + INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n      };\n    case actionTypes.REMOVE_INGREDIENT:\n      return {\n        ...state,\n        ingredients: {\n          ...state.ingredients,\n          [action.ingredientName]: state.ingredients[action.ingredientName] > 0 ? state.ingredients[action.ingredientName] - 1 : 0\n        },\n        totalPrice: state.totalPrice - INGREDIENT_PRICES[action.ingredientName],\n        building: true,\n      };\n    case actionTypes.SET_INGREDIENTS:\n      return {\n        ...state,\n        ingredients:action.ingredients,\n        error: false,\n        totalPrice: initialState.totalPrice,\n        building: false,\n      }\n    case actionTypes.FETCH_INGREDIENTS_FAILED:\n      console.log(`ERROR: ${action.error}`);\n      return {\n        ...state, error: true\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n  orders: [],\n  loading: false,\n  error: false,\n  purchased: false\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.PURCHASE_INIT:\n      return {\n        ...state,\n        purchased: false\n      }\n    case actionTypes.PURCHASE_BURGER_SUCCESS:\n      return {\n        ...state,\n        loading: false,\n        error: false,\n        purchased: true,\n        orders: state.orders.concat({...action.orderData, id: action.orderID})\n      };\n    case actionTypes.PURCHASE_BURGER_FAIL:\n      return {\n        ...state,\n        loading: false,\n        error: true,\n      };\n    case actionTypes.PURCHASE_BURGER_START:\n      return {\n        ...state,\n        loading: true,\n      };\n      case actionTypes.FETCH_ORDERS_SUCCESS:\n        return {\n          ...state,\n          loading: false,\n          error: false,\n          orders: action.orders\n        };\n      case actionTypes.FETCH_ORDERS_FAIL:\n        return {\n          ...state,\n          loading: false,\n          error: true,\n        };\n      case actionTypes.FETCH_ORDERS_START:\n        return {\n          ...state,\n          loading: true,\n        };\n\n\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import * as actionTypes from '../actions/actionTypes'\n\nconst initialState = {\n  token: JSON.parse(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')).token : null,\n  userId: JSON.parse(localStorage.getItem('user')) ? JSON.parse(localStorage.getItem('user')).userId : null,\n  error: null,\n  loading: false,\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.AUTH_START:\n      return {\n        ...state,\n        error: null,\n        loading: true,\n      }\n    case actionTypes.AUTH_SUCCESS:\n      return {\n        ...state,\n        token: action.token,\n        userId: action.userId,\n        error: null,\n        loading: false,\n      }\n    case actionTypes.AUTH_FAIL:\n      return {\n        ...state,\n        error: action.error,\n        loading: false,\n      }\n    case actionTypes.AUTH_LOGOUT:\n      localStorage.removeItem('user');\n      return {\n        ...state,\n        token: null,\n        userId: null,\n        error: null,\n        loading: false,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default reducer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport { createStore , applyMiddleware, compose, combineReducers } from 'redux';\nimport thunk from 'redux-thunk'\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport burgerBuilderReducer from './store/reducers/burgerBuilder'\nimport orderReducer from './store/reducers/order'\nimport authReducer from './store/reducers/auth'\n\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst rootReducer = combineReducers({\n  burgerBuilder: burgerBuilderReducer ,\n  order: orderReducer ,\n  auth: authReducer,\n})\n\nconst store = createStore(rootReducer,composeEnhancers(applyMiddleware(thunk)))\n\nconst app = (\n  <Provider store ={store}>\n    <BrowserRouter\n      basename={\"/Burger-Builder\"}>\n      <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}